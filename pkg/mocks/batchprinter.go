// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go
//
// Generated by this command:
//
//	mockgen -source interface.go -destination ../mocks/batchprinter.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockBatchPrinter is a mock of BatchPrinter interface.
type MockBatchPrinter struct {
	ctrl     *gomock.Controller
	recorder *MockBatchPrinterMockRecorder
	isgomock struct{}
}

// MockBatchPrinterMockRecorder is the mock recorder for MockBatchPrinter.
type MockBatchPrinterMockRecorder struct {
	mock *MockBatchPrinter
}

// NewMockBatchPrinter creates a new mock instance.
func NewMockBatchPrinter(ctrl *gomock.Controller) *MockBatchPrinter {
	mock := &MockBatchPrinter{ctrl: ctrl}
	mock.recorder = &MockBatchPrinterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchPrinter) EXPECT() *MockBatchPrinterMockRecorder {
	return m.recorder
}

// PrintObjects mocks base method.
func (m *MockBatchPrinter) PrintObjects(arg0 []unstructured.Unstructured, arg1 io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrintObjects", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PrintObjects indicates an expected call of PrintObjects.
func (mr *MockBatchPrinterMockRecorder) PrintObjects(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrintObjects", reflect.TypeOf((*MockBatchPrinter)(nil).PrintObjects), arg0, arg1)
}
